#include <iostream>
#include <graphics.h>
#include<math.h>
using namespace std;
void ddaline(int x1,int y1,int x2, int y2)
{
    int dx = x2-x1,dy=y2-y1,steps;
    float x=x1,y=y1,xinc,yinc;
    if(abs(dx)>abs(dy))
        steps =abs(dx);
    else
        steps=abs(dy);
    xinc=(float)dx/(float) steps;
    yinc=(float)dy/(float) steps;
    
    for(int i=0;i<steps;i++)
    {
        putpixel(round(x),round(y),RED);
        x += xinc;
        y += yinc;
    }
}

void drawcircle(int xc,int yc,int x,int y)
{
    putpixel(xc+x,yc-y,RED);
    putpixel(xc-x,yc-y,RED);
    putpixel(xc+x,yc+y,RED);
    putpixel(xc-x,yc+y,RED);
    putpixel(xc+y,yc-x,RED);
    putpixel(xc-y,yc-x,RED);
    putpixel(xc+y,yc+x,RED);
    putpixel(xc-y,yc+x,RED);
}
void bresenham_circle(int xc,int yc,int r)
{
    int x=0;
    int y=r;
    int d=3-(2*r);
    while (x<=y)
    {
        drawcircle(xc,yc,x,y);
        x=x+1;
        if (d<0)
        {
            d=d+(4*x)+6;
        }    
        else
        {
            y=y-1;
            d=d+4*(x-y)+10;
        }
     }
}
int main()
{
    int gd=DETECT,gm;
    initgraph(&gd,&gm,NULL);
    int x1,x2,y1,y2;
    int D,d,r;
    cout<<"Entr the coordinates"<<endl;
    cin>>x1>>y1>>x2>>y2;
    ddaline(x1,y1,x2,y1);
    ddaline(x2,y1,x2,y2);
    ddaline(x2,y2,x1,y2);
    ddaline(x1,y2,x1,y1);
    
    //RHOMBUS
    ddaline(x1,(y1+y2)/2,(x1+x2)/2,y1); 
    ddaline((x1+x2)/2,y1,x2,(y1+y2)/2);
    ddaline(x2,(y1+y2)/2,(x1+x2)/2,y2);
    ddaline((x1+x2)/2,y2,x1,(y1+y2)/2);
     
    
    //INNER CRICLE
	D=x2-x1;
	d=y2-y1;
	r=(D*d)/(2*sqrt((D*D)+(d*d)));
    bresenham_circle((x1+x2)/2,(y1+y2)/2,r);
    
    delay(100000);
    closegraph();
    return 0;
}

/* 50 50 300 300 */    
